The purpose of this program is to read a command line from the user and separate it into words, to use the first word of the command line to call command functions as well.

skipChar() function and splitCommandLine() function are in charge of reading the command line and splitting it into words. skipCChat(char* charPtr, char skip) function can skip the characters given by the second parameter.This function returns the pointer which given by the first parameter. If there are spaces in the command line, the skipChar() function will skip these spaces and return the pointer to the first word. splitCommandLine(char*commandBuffer, char* args[], int maxargs) will split the command line into words and store them in the array called commandBuffer.This function returns the number of words stored in the array. A special feature of c language used in this function is built-in functions: strchr and fprintf. strchr() function can search the first occurence of the character c(an unsigned char) in the string pointed by the argument str. fprintf() function works to print error messages by using default descriptor stderr.

The dispatch table is implemented by structure to store commands. Then the doCommand() function checks whether user types a command. If the command matches one of commands(pwd,ls,exit,cd) listed in the dispatch table, it will jump into the specific function and run. scandir() function is used to list contents of a directory. 
